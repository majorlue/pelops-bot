// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Tower {
  theme  String // Tower Theme eg. Prometheus
  week   Int // Week # of the year 1-52
  floors Floor[] // Array of floors and their encounters

  // Defining unique constraint to be combination of theme/week
  @@id([theme, week])
  @@map("towers")
}

model Floor {
  id         String   @id @default(uuid())
  number     Int // Floor number 1-50
  guardians  String[] // Array of primary fight sprite
  strays     String[] // Array of primary fight sprite
  puzzles    String[] // Array of puzzle type, difficulty
  chests     String[] // Array of chest bufftype/key
  // Relation to Theme/Week
  tower      Tower    @relation(fields: [towerTheme, towerWeek], references: [theme, week])
  towerTheme String   @map("tower_theme")
  towerWeek  Int      @map("tower_week")

  @@map("floors")
}

model Encounter {
  leader   String   @id @unique // Monster sprite, as it shows on map
  tier     Int // Minimum encounter tier (9, 10)
  monsters String[] // Array of monsters in this encounter (incl. leader)

  @@map("encounters")
}

model Monster {
  id       Int      @id @default(autoincrement())
  name     String // Monster name
  statuses String[] // buffs/debuffs/statuses, or berserk?

  @@map("monsters")
}
